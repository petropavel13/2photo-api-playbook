- hosts: all
  remote_user: root
  vars_files:
    - ../vars/main.yml
    - ../vault/db.yml
    - ../vault/django.yml
  vars:
    local_settings_path: "{{ project_dir }}/two_photo_api/local_settings.py"
    local_settings_template: "../templates/local_settings.py"
    requirements_file: "{{ project_dir }}/requirements.pip"
    repo_url: "https://github.com/petropavel13/2photo-api"
    nginx_site_conf_template: "../templates/nginx.conf"
    nginx_default_conf_path: "/etc/nginx/sites-available/default"
    uwsgi_ini_template: "../templates/uwsgi.ini"
    uwsgi_ini_path: "{{ project_dir }}/two_photo_api/uwsgi.ini"
    supervisor_conf_template: "../templates/two_photo_api.supervisor.conf"
    supervisor_conf_path: "/etc/supervisor/conf.d/two_photo_api.conf"
  tasks:
    - name: Install essential packages
      apt: name={{ item }}
      with_items:
        - python-pip
        - git
        - nginx
        - supervisor
    - name: Install virtualenv
      pip: name=virtualenv
    - name: Create project folder
      file: path={{ project_dir }} state=directory owner="www-data" group="www-data"
    - name: Clone repo
      git: repo={{ repo_url }} dest={{ project_dir }}
      sudo: yes
      sudo_user: www-data
    - name: Create virtualenv
      command: "virtualenv {{ virtualenv_dir }}"
      sudo: yes
      sudo_user: www-data
    - name: Install dev packages
      apt: name={{ item }}
      with_items:
        - libcurl4-openssl-dev
        - "postgresql-server-dev-{{ pg_version }}"
        - python-dev
        - libxml2-dev
        - libxslt1-dev
    - name: Install pip requirements
      pip: virtualenv={{ virtualenv_dir }} requirements={{ requirements_file }} extra_args="--no-cache-dir"
      sudo: yes
      sudo_user: www-data
    - name: Create local settings
      template: src={{ local_settings_template }} dest={{ local_settings_path }} owner="www-data" group="www-data"
    - name: Initial migrate DB
      shell: ". {{ virtualenv_dir }}/bin/activate && python {{ project_dir }}/manage.py migrate"
      sudo: yes
      sudo_user: www-data
    - name: Create nginx configuration
      template: src={{ nginx_site_conf_template }} dest={{ nginx_default_conf_path }}
      notify:
      - reload nginx conf
    - name: Create uwsgi.ini
      template: src={{ uwsgi_ini_template }} dest={{ uwsgi_ini_path }} owner="www-data" group="www-data"
    - name: Create supervisor conf
      template: src={{ supervisor_conf_template }} dest={{ supervisor_conf_path }} owner="www-data" group="www-data"
    - name: Run with supervisor
      supervisorctl: name="{{ app_name }}" config="{{ supervisor_conf_path }}" state=restarted
  handlers:
    - name: reload nginx conf
      service: name=nginx state=reloaded
